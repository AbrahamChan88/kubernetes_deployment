---
- hosts: localhost
  connection: local
  gather_facts: false

  vars:
    exec_user: jenkins
    exec_group: jenkins
    workspace_dir: "{{ lookup('env','WORKSPACE') }}"
    k8s_manifest_url: "{{ product_url | urlsplit('path') }}"
    k8s_manifest_dir: "{{ k8s_manifest_url | dirname }}"   #.split("/")[0:-1]|join("/")
    k8s_manifest_local: "{{ workspace_dir}}{{ k8s_manifest_dir }}"
    certificate_path: "{{ workspace_dir }}{{ playbook_dir }}/certs/ca.pem" #{{ workspace_dir }}/control-machines/certs/ca.pem

  tasks:

    - name: Create directory for product manifest download
      file:
        path: "{{ k8s_manifest_local }}"
        state: directory
        mode: 0700

    - name: Copy certificate to connect to k8s_cluster # modify or remove code to reflect certificate management; May not be required at this stage.
      copy:
        src: "{{ certificate_path }}"
        dest: "{{ k8s_manifest_local }}"
        owner: "{{ exec_user }}"
        group: "{{ exec_group }}"
        mode: 0400

    - name: Copy k8s config file to workspace # modify or remove code to reflect work flow.
      copy:
        src: /var/lib/kubernetes/kubeconfig
        dest: "{{ k8s_manifest_local }}"
        owner: "{{ exec_user }}"
        group: "{{ exec_group }}"
        mode: 0600

    - name: Remove 'warning' notice in copied k8s config file
      lineinfile:
        dest: "{{ k8s_manifest_local }}/kubeconfig"
        regexp: '^DO NOT EDIT THIS FILE. Copy or create new file.$'
        backrefs: true
        state: absent

    - name: Update k8s config connecting CA information
      lineinfile:
        dest: "{{ k8s_manifest_local }}/kubeconfig"
        regexp: '^(.*)certificate-authority:(.*)$'
        line: "    certificate-authority: {{ workspace_dir }}{{ k8s_manifest_dir }}/ca.pem "
        state: present
      register: product_kubeconfig_ca

    - name: Update k8s config connecting Server information
      lineinfile:
        dest: "{{ k8s_manifest_local }}/kubeconfig"
        regexp: '^(.*)server:(.*)$'
        line: "    server: https://{{ k8s_cluster_name }}:{{ k8s_cluster_port }}"
        state: present
      register: product_kubeconfig_server

    - name: Update k8s config connecting Token information
      lineinfile:
        dest: "{{ k8s_manifest_local }}/kubeconfig"
        regexp: '^(.*)token:(.*)$'
        line: "    token: {{ k8s_cluster_token }}"
        state: present
      register: product_kubeconfig_token

    - name: Download product k8s manifest file
      shell: "wget -nc -r -l1 -nd -np -nH --cut-dirs=88 {{ product_url }}  -P {{ k8s_manifest_local }}"
      register: product_manifest_content

    - name: Create local product k8s manifest file
      shell: "ls {{ k8s_manifest_local }}/*.yaml | xargs -n 1 basename > {{ k8s_manifest_local }}/deploy-build.yaml"

    - name: Update local product k8s manifest file to reference correct location
      shell: "sed -i -e 's+^+{{ k8s_manifest_local }}/+' {{ k8s_manifest_local }}/deploy-build.yaml"

    - name: Register local deployment file for item looping
      shell: "ls {{ k8s_manifest_local }}/deploy-build.yaml | xargs -n 1 basename"
      register: deployment_files

    - name: Deploy product k8s manifest file
      shell: "kubectl --kubeconfig={{ k8s_manifest_local }}/kubeconfig apply -f {{ item }}"
      with_lines: cat {{ k8s_manifest_local }}/deploy-build.yaml
      register: product_manifest_ingressed
...