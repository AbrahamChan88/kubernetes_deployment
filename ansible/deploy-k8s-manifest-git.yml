---
- hosts: localhost
  connection: local
  gather_facts: false

  vars:
    exec_user: $USER # For Jenkins pipeline set to "jenkins"
    exec_group: $USER # For Jenkins pipeline set to "jenkins"
    workspace_dir: "{{ lookup('env','WORKSPACE') }}"
    certificate_path: "{{ workspace_dir }}{{ playbook_dir }}/certs/ca.pem" #{{ workspace_dir }}/certs/ca.pem
    product_tmp_path: "{{ workspace_dir }}/tmp"
    manifests_dir: "{{ workspace_dir }}/{{ product_manifest_directory }}"
#   product_git_repo: Defined example: "ssh://username@serversourcecode.com:22/_ssh/project"
#   product_git_branch: Defined example: "master"
#   product_manifest_directory: Defined example: "aurora_k8s"
#   product_git_key: Defined example: /home/user/.ssh/id_rsa or a passed file
#   k8s_cluster_name: Defined example: k8s-spacename-master_node_region.domain.com
#   k8s_cluster_port: Defined example: 443
#   k8s_cluster_token: Defined example: string

  tasks:

    - name: Create directory for temporal store of playbook working files
      file:
        path: "{{ manifests_dir }}"
        state: directory
        mode: 0700

    - name: Copy certificate to connect to k8s_cluster # modify or remove code to reflect certificate management; May not be required at this stage.
      copy:
        src: "{{ certificate_path }}"
        dest: "{{ manifests_dir }}"
        owner: "{{ exec_user }}"
        group: "{{ exec_group }}"
        mode: 0400

    - name: Copy k8s config file to workspace # modify or remove code to reflect work flow.
      copy:
        src: /var/lib/kubernetes/kubeconfig
        dest: "{{ manifests_dir }}"
        owner: "{{ exec_user }}"
        group: "{{ exec_group }}"
        mode: 0600

    - name: Remove 'warning' notice in copied k8s config file
      lineinfile:
        dest: "{{ manifests_dir }}/kubeconfig"
        regexp: '^DO NOT EDIT THIS FILE. Copy or create new file.$'
        backrefs: true
        state: absent

    - name: Update k8s config connecting CA information
      lineinfile:
        dest: "{{ manifests_dir }}/kubeconfig"
        regexp: '^(.*)certificate-authority:(.*)$'
        line: "    certificate-authority: {{ manifests_dir }}/ca.pem "
        state: present
      register: product_kubeconfig_ca

    - name: Update k8s config connecting Server information
      lineinfile:
        dest: "{{ manifests_dir }}/kubeconfig"
        regexp: '^(.*)server:(.*)$'
        line: "    server: https://{{ k8s_cluster_name }}:{{ k8s_cluster_port }}"
        state: present
      register: product_kubeconfig_server

    - name: Update k8s config connecting Token information
      lineinfile:
        dest: "{{ manifests_dir }}/kubeconfig"
        regexp: '^(.*)token:(.*)$'
        line: "    token: {{ k8s_cluster_token }}"
        state: present
      register: product_kubeconfig_token

    - name: Pull git repo {{ product_git_repo }} containing Kubernetes Manifest Files
      git:
        repo: "{{ product_git_repo }}"
        remote: "{{ product_git_branch }}"
        dest: "{{ product_tmp_path }}"
        accept_hostkey: yes
        key_file: "{{ product_git_key }}"
        archive: "{{ product_tmp_path }}/k8s_manifest.tar"

    - name: Find Directory {{ product_manifest_directory }}
      shell: find "{{ product_tmp_path }}" -type d -name "{{ product_manifest_directory }}"
      register: downloaded_manifests_dir

    - name: Copy Kubernetes Manifest Files to working directory
      copy:
        src: "{{ downloaded_manifests_dir.stdout }}/"
        dest: "{{ manifests_dir }}/"
        mode: 0600

    - name: Create Kubernetes Manifest Deployment file
      shell: "ls {{ downloaded_manifests_dir.stdout }}/*.yaml | xargs -n 1 basename > {{ manifests_dir }}/deploy-build.yaml"

    - name: Remove tmp directory
      file:
        state: absent
        path: "{{ product_tmp_path }}"

    - name: Deploy product k8s manifest file
      shell: "kubectl --kubeconfig={{ manifests_dir }}/kubeconfig apply -f {{ manifests_dir }}/{{ item }}"
      with_lines: cat {{ manifests_dir }}/deploy-build.yaml
      register: product_manifest_ingressed
...